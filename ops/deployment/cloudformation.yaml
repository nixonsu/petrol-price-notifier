Resources:
  # Define the SNS Topic
  MySNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "MySNSDisplayName"
      TopicName: "MySNSTopicName"

  # Subscribe a mobile number to the SNS Topic
  MySNSSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "sms"
      TopicArn:
        Ref: "MySNSTopic"
      Endpoint: "+xxxx"

  # Define the Lambda execution role
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaExecutionPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource:
                  Ref: "MySNSTopic"

  # Define the Lambda function
  MyLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: "MyLambdaFunction"
      Handler: "com.nixonsu.ApplicationHandler"  # Replace with the actual package and handler class
      Role:
        Fn::GetAtt:
          - "LambdaExecutionRole"
          - "Arn"
      Code:
        S3Bucket: "my-bucket"  # Replace with your S3 bucket name
        S3Key: "my-lambda-code.jar"  # Replace with your jar file path
      Runtime: "java11.al2"
      Timeout: 15

  # Define the EventBridge (CloudWatch Events) rule to trigger the Lambda function
  MyScheduledRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Trigger MyLambdaFunction every day at 9 AM."
      ScheduleExpression: "cron(0 9 * * ? *)"
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "MyLambdaFunction"
              - "Arn"
          Id: "MyLambdaFunctionTarget"

  # Grant permissions for the EventBridge rule to invoke the Lambda function
  PermissionForEventsToInvokeLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Ref: "MyLambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "MyScheduledRule"
          - "Arn"
